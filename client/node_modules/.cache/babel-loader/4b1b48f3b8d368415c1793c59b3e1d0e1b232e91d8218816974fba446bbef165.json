{"ast":null,"code":"var _jsxFileName = \"/home/leissan/Development/hiking/client/src/styles/Button.js\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  primary: {\n    \"--main\": \"indigo\",\n    \"--accent\": \"white\"\n  },\n  secondary: {\n    \"--main\": \"lwhite\",\n    \"--accent\": \"indigo\"\n  }\n};\nfunction Button(_ref) {\n  let {\n    variant = \"fill\",\n    color = \"primary\",\n    ...props\n  } = _ref;\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n  return /*#__PURE__*/_jsxDEV(Component, {\n    style: COLORS[color],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_c = Button;\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","COLORS","primary","secondary","Button","_ref","variant","color","props","Component","FillButton","OutlineButton","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","ButtonBase","button","$RefreshReg$"],"sources":["/home/leissan/Development/hiking/client/src/styles/Button.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"indigo\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"lwhite\",\n    \"--accent\": \"indigo\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAE;IACP,QAAQ,EAAE,QAAQ;IAClB,UAAU,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACT,QAAQ,EAAE,QAAQ;IAClB,UAAU,EAAE;EACd;AACF,CAAC;AAED,SAASC,MAAMA,CAAAC,IAAA,EAAoD;EAAA,IAAnD;IAAEC,OAAO,GAAG,MAAM;IAAEC,KAAK,GAAG,SAAS;IAAE,GAAGC;EAAM,CAAC,GAAAH,IAAA;EAC/D,IAAII,SAAS;EACb,IAAIH,OAAO,KAAK,MAAM,EAAE;IACtBG,SAAS,GAAGC,UAAU;EACxB,CAAC,MAAM,IAAIJ,OAAO,KAAK,SAAS,EAAE;IAChCG,SAAS,GAAGE,aAAa;EAC3B;EAEA,oBAAOX,OAAA,CAACS,SAAS;IAACG,KAAK,EAAEX,MAAM,CAACM,KAAK,CAAE;IAAA,GAAKC;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACvD;AAACC,EAAA,GATQb,MAAM;AAWf,MAAMc,UAAU,GAAGpB,MAAM,CAACqB,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMT,UAAU,GAAGZ,MAAM,CAACoB,UAAU,CAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMP,aAAa,GAAGb,MAAM,CAACoB,UAAU,CAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAed,MAAM;AAAC,IAAAa,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}