{"ast":null,"code":"var _jsxFileName = \"/home/leissan/Development/hiking/client/src/pages/NewExercise.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewExercise({\n  user,\n  setUser\n}) {\n  _s();\n\n  const [title, setTitle] = useState(\"My Awesome Exercise\");\n  const [description, setDescription] = useState(`Here's how you make it.`);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/exercises\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(newexercise => {\n          const exercises = user.all_exercises;\n          setTitle(\"\");\n          setDescription(\"\");\n          setUser({ ...user,\n            all_exercises: [...exercises, newexercise]\n          });\n        });\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(WrapperChild, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            id: \"description\",\n            rows: \"10\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: isLoading ? \"Loading...\" : \"Submit Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n            children: err\n          }, err, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WrapperChild, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewExercise, \"MFYurB+y3/kJWml1x5EztNCFsRY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewExercise;\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n_c2 = Wrapper;\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n_c3 = WrapperChild;\nexport default NewExercise;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NewExercise\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"WrapperChild\");","map":{"version":3,"sources":["/home/leissan/Development/hiking/client/src/pages/NewExercise.js"],"names":["useState","useNavigate","styled","ReactMarkdown","Button","Error","FormField","Input","Label","Textarea","NewExercise","user","setUser","title","setTitle","description","setDescription","errors","setErrors","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","newexercise","exercises","all_exercises","err","target","value","map","Wrapper","section","WrapperChild","div"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAUC,WAAV,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,WAAjE;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArB,EAAwC;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,qBAAD,CAAlC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAE,yBAAF,CAA9C;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMqB,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,WAASqB,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAK,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFO;AAKhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjB,QAAAA,KAAK,EAAEA,KADU;AAEjBE,QAAAA,WAAW,EAAEA;AAFI,OAAf;AALU,KAAf,CAAL,CASGgB,IATH,CASSC,CAAD,IAAO;AACXZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAIY,CAAC,CAACC,EAAN,EAAU;AACND,QAAAA,CAAC,CAACE,IAAF,GAASH,IAAT,CAAgBI,WAAD,IAAiB;AAChC,gBAAMC,SAAS,GAAGzB,IAAI,CAAC0B,aAAvB;AACDvB,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,UAAAA,cAAc,CAAC,EAAD,CAAd;AACAJ,UAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU0B,YAAAA,aAAa,EAAE,CAAC,GAAGD,SAAJ,EAAeD,WAAf;AAAzB,WAAD,CAAP;AACG,SALF;AAQH,OATD,MASO;AACHH,QAAAA,CAAC,CAACE,IAAF,GAASH,IAAT,CAAeO,GAAD,IAASpB,SAAS,CAACoB,GAAG,CAACrB,MAAL,CAAhC;AACH;AACJ,KAvBD;AAwBH;;AAED,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,YAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEK,YAAhB;AAAA,gCACI,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,OAFP;AAGI,YAAA,KAAK,EAAET,KAHX;AAII,YAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD;AACI,YAAA,EAAE,EAAC,aADP;AAEI,YAAA,IAAI,EAAC,IAFT;AAGI,YAAA,KAAK,EAAEzB,WAHX;AAII,YAAA,QAAQ,EAAGQ,CAAD,IAAOP,cAAc,CAACO,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAmBI,QAAC,SAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAA,sBACKrB,SAAS,GAAG,YAAH,GAAkB;AADhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAwBI,QAAC,SAAD;AAAA,oBACKF,MAAM,CAACwB,GAAP,CAAYH,GAAD,iBACR,QAAC,KAAD;AAAA,sBAAkBA;AAAlB,aAAYA,GAAZ;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkCI,QAAC,YAAD;AAAA,8BACI;AAAA,kBAAKzB;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,kBAAgBE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GA7EQL,W;UAKYT,W;;;KALZS,W;AA+ET,MAAMgC,OAAO,GAAGxC,MAAM,CAACyC,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,O;AAQN,MAAME,YAAY,GAAG1C,MAAM,CAAC2C,GAAI;AAChC;AACA,CAFA;MAAMD,Y;AAIN,eAAelC,WAAf","sourcesContent":["import { useState } from \"react\";\nimport {  useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\n\nfunction NewExercise({ user, setUser }) {\n    const [title, setTitle] = useState(\"My Awesome Exercise\");\n    const [description, setDescription] = useState(`Here's how you make it.`);\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"/exercises\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                title: title,\n                description: description,\n            }),\n        }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n                r.json().then ((newexercise) => {\n                const exercises = user.all_exercises\n               setTitle(\"\")\n               setDescription(\"\")\n               setUser({...user, all_exercises: [...exercises, newexercise]})\n                 } )\n              \n               \n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        });\n    }\n\n    return (\n        <Wrapper>\n            <WrapperChild>\n                <h2>Create Exercise</h2>\n                <form onSubmit={handleSubmit}>\n                    <FormField>\n                        <Label htmlFor=\"title\">Title</Label>\n                        <Input\n                            type=\"text\"\n                            id=\"title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                        />\n                    </FormField>\n                    <FormField>\n                        <Label htmlFor=\"description\">Description</Label>\n                        <Textarea\n                            id=\"description\"\n                            rows=\"10\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </FormField>\n                    <FormField>\n                        <Button color=\"primary\" type=\"submit\">\n                            {isLoading ? \"Loading...\" : \"Submit Exercise\"}\n                        </Button>\n                    </FormField>\n                    <FormField>\n                        {errors.map((err) => (\n                            <Error key={err}>{err}</Error>\n                        ))}\n                    </FormField>\n                </form>\n            </WrapperChild>\n            <WrapperChild>\n                <h1>{title}</h1>\n                <ReactMarkdown>{description}</ReactMarkdown>\n            </WrapperChild>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NewExercise;"]},"metadata":{},"sourceType":"module"}