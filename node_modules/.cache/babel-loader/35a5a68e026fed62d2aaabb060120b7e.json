{"ast":null,"code":"var _jsxFileName = \"/home/leissan/Development/hiking/client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport HikeList from \"../pages/hikes/HikeList\";\nimport NewExercise from \"../pages/NewExercise\";\nimport List from \"../pages/exercise/List\";\nimport Update from \"../pages/exercise/Update\";\nimport Show from \"../pages/exercise/Show\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [myHikes, setMyHikes] = useState([]);\n  const [otherHikes, setOtherHikes] = useState([]);\n  const [participantHikes, setParticipantHikes] = useState([]);\n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then(r => {\n      if (r.ok) {\n        r.json().then(u => {\n          setUser(u);\n        });\n      }\n    }); // fetchMyHikes();\n    // fetchOtherHikes();\n    // fetchParticipantHikes();\n  }, []);\n  useEffect(() => {\n    // auto-login\n    if (user) {\n      setMyHikes(user.owned_hikes);\n      setParticipantHikes(user.participated_hikes);\n    } // fetchMyHikes();\n    // fetchOtherHikes();\n    // fetchParticipantHikes();\n\n  }, [user]);\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      user: user,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(HikeList, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"NznWNLe8iz0V2vfJ1HrfpkyUdTo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/leissan/Development/hiking/client/src/components/App.js"],"names":["React","useEffect","useState","BrowserRouter","Routes","Route","NavBar","Login","HikeList","NewExercise","List","Update","Show","App","user","setUser","myHikes","setMyHikes","otherHikes","setOtherHikes","participantHikes","setParticipantHikes","fetch","then","r","ok","json","u","owned_hikes","participated_hikes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAqB,IAAAA,KAAK,CAAC,KAAD,CAAL,CAAaC,IAAb,CAAmBC,CAAD,IAAO;AACrB,UAAIA,CAAC,CAACC,EAAN,EAAU;AACND,QAAAA,CAAC,CAACE,IAAF,GAASH,IAAT,CACKI,CAAD,IAAO;AACHZ,UAAAA,OAAO,CAACY,CAAD,CAAP;AACH,SAHL;AAKH;AACJ,KARD,EAFY,CAYZ;AACA;AACA;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA1B,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAGa,IAAH,EAAS;AACLG,MAAAA,UAAU,CAACH,IAAI,CAACc,WAAN,CAAV;AACAP,MAAAA,mBAAmB,CAACP,IAAI,CAACe,kBAAN,CAAnB;AACH,KALW,CAOZ;AACA;AACA;;AACH,GAVQ,EAUN,CAACf,IAAD,CAVM,CAAT;AAYA,MAAI,CAACA,IAAL,EAAW,oBAAO,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,OAAO,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAyBD;;GA9DQD,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport HikeList from \"../pages/hikes/HikeList\";\nimport NewExercise from \"../pages/NewExercise\";\nimport List from \"../pages/exercise/List\";\nimport Update from \"../pages/exercise/Update\";\nimport Show from \"../pages/exercise/Show\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [myHikes, setMyHikes] = useState([]);\n  const [otherHikes, setOtherHikes] = useState([]);\n  const [participantHikes, setParticipantHikes] = useState([]);\n\n  useEffect(() => {\n      // auto-login\n      fetch(\"/me\").then((r) => {\n          if (r.ok) {\n              r.json().then(\n                  (u) => {\n                      setUser(u);\n                  }\n              );\n          }\n      });\n\n      // fetchMyHikes();\n      // fetchOtherHikes();\n      // fetchParticipantHikes();\n  }, []);\n\n  useEffect(() => {\n      // auto-login\n      if(user) {\n          setMyHikes(user.owned_hikes);\n          setParticipantHikes(user.participated_hikes);\n      }\n\n      // fetchMyHikes();\n      // fetchOtherHikes();\n      // fetchParticipantHikes();\n  }, [user]);\n\n  if (!user) return <Login onLogin={setUser}/>;\n\n  return (\n      <>\n          <NavBar user={user} setUser={setUser}/>\n          <HikeList user={user}/>\n          {/*<main>*/}\n          {/*  <Switch>*/}\n          {/*    <Route path=\"/new_exercise\">*/}\n          {/*      <NewExercise user={user} />*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/exercises/:exercise_id/update_log/:id\">*/}\n          {/*      <Update/>*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/exercises/:id\">*/}\n          {/*      <Show/>*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/exercises\">*/}\n          {/*      <List />*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/\">*/}\n          {/*      <List user={user} />*/}\n          {/*    </Route>*/}\n          {/*  </Switch>*/}\n          {/*</main>*/}\n      </>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}