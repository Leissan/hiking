{"ast":null,"code":"var _jsxFileName = \"/home/leissan/Development/hiking/client/src/pages/exercise/Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../../styles\";\nimport Show from \"./Show\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Update() {\n  _s();\n\n  // const [exercise_id, setExerciseId] = useState(null)\n  // const [repetitionCount, setRepetitionCount] = useState(null)\n  // const [repetitionType, setRepetitionType] = useState(null)\n  const [log, setLog] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    exercise_id,\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`/logs/${id}`).then(r => r.json()).then(r => {\n      setLog(r);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(`/logs/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        exercise_id: exercise_id,\n        repetition_type: log.repetition_type,\n        repetition_count: log.repetition_count\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        navigate(`/exercises/${exercise_id}`);\n\n        /*#__PURE__*/\n        _jsxDEV(Show, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this);\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  const onChange = field => event => {\n    setLog({\n      [field]: event.target.value\n    });\n    return event;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(WrapperChild, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), log ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormField, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exercise_id\",\n              children: \"Exercise ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              id: \"exercise_id\",\n              value: log.exercise_id,\n              onChange: onChange(\"exercise_id\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exercise_title\",\n              children: \"Exercise title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"exerciseTitle\",\n              value: log.title,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exercise_description\",\n              children: \"Exercise description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              id: \"description\",\n              rows: \"5\",\n              value: log.description,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"repetitionCount\",\n              children: \"Repetition count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              id: \"repetitionCount\",\n              value: log.repetition_count,\n              onChange: onChange(\"repetition_count\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"repetitionType\",\n              children: \"Repetition type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"repetitionType\",\n              value: log.repetition_type,\n              onChange: onChange(\"repetition_type\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              children: isLoading ? \"Loading...\" : \"Update Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n              children: err\n            }, err, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: `/exercises/${id}`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Update, \"yV+voa+1xk9iHaJ/d65kohGqVVM=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Update;\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n_c2 = Wrapper;\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n_c3 = WrapperChild;\nexport default Update;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Update\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"WrapperChild\");","map":{"version":3,"sources":["/home/leissan/Development/hiking/client/src/pages/exercise/Update.js"],"names":["React","useEffect","useState","Link","useParams","useNavigate","styled","ReactMarkdown","Button","Error","FormField","Input","Label","Textarea","Show","Update","log","setLog","errors","setErrors","isLoading","setIsLoading","navigate","exercise_id","id","fetch","then","r","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","repetition_type","repetition_count","ok","err","onChange","field","event","target","value","title","description","map","Wrapper","section","WrapperChild","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AAEA,SAAQC,WAAR,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAA+D,cAA/D;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd;AACA;AACA;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMoB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM;AAACkB,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAoBpB,SAAS,EAAnC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,KAAK,CAAE,SAAQD,EAAG,EAAb,CAAL,CACKE,IADL,CACWC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADjB,EAEKF,IAFL,CAEWC,CAAD,IAAO;AACTV,MAAAA,MAAM,CAACU,CAAD,CAAN;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,KAAK,CAAE,SAAQD,EAAG,EAAb,EAAgB;AACjBQ,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,QAAAA,WAAW,EAAEA,WADI;AAEjBc,QAAAA,eAAe,EAAErB,GAAG,CAACqB,eAFJ;AAGjBC,QAAAA,gBAAgB,EAAEtB,GAAG,CAACsB;AAHL,OAAf;AALW,KAAhB,CAAL,CAUGZ,IAVH,CAUSC,CAAD,IAAO;AACXN,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAIM,CAAC,CAACY,EAAN,EAAU;AACNjB,QAAAA,QAAQ,CAAE,cAAaC,WAAY,EAA3B,CAAR;;AACA;AAAA,gBAAC,IAAD;AAAM,UAAA,EAAE,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA;AACH,OAHD,MAGO;AACHG,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAec,GAAD,IAASrB,SAAS,CAACqB,GAAG,CAACtB,MAAL,CAAhC;AACH;AACJ,KAlBD;AAmBH;;AAED,QAAMuB,QAAQ,GAAIC,KAAD,IAAYC,KAAD,IAAW;AAEnC1B,IAAAA,MAAM,CAAC;AAAC,OAACyB,KAAD,GAASC,KAAK,CAACC,MAAN,CAAaC;AAAvB,KAAD,CAAN;AACA,WAAOF,KAAP;AACH,GAJD;;AAMA,sBACI,QAAC,OAAD;AAAA,2BACI,QAAC,YAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK3B,GAAG,gBACA;AAAA,gCACI;AAAM,UAAA,QAAQ,EAAEa,YAAhB;AAAA,kCACI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,EAAE,EAAC,aAFP;AAGI,cAAA,KAAK,EAAEb,GAAG,CAACO,WAHf;AAII,cAAA,QAAQ,EAAEkB,QAAQ,CAAC,aAAD;AAJtB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,EAAE,EAAC,eAFP;AAGI,cAAA,KAAK,EAAEzB,GAAG,CAAC8B,KAHf;AAII,cAAA,QAAQ,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAmBI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,QAAD;AACI,cAAA,EAAE,EAAC,aADP;AAEI,cAAA,IAAI,EAAC,GAFT;AAGI,cAAA,KAAK,EAAE9B,GAAG,CAAC+B,WAHf;AAII,cAAA,QAAQ,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eA4BI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,EAAE,EAAC,iBAFP;AAGI,cAAA,KAAK,EAAE/B,GAAG,CAACsB,gBAHf;AAII,cAAA,QAAQ,EAAEG,QAAQ,CAAC,kBAAD;AAJtB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BJ,eAqCI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,EAAE,EAAC,gBAFP;AAGI,cAAA,KAAK,EAAEzB,GAAG,CAACqB,eAHf;AAII,cAAA,QAAQ,EAAEI,QAAQ,CAAC,iBAAD;AAJtB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCJ,eA8CI,QAAC,SAAD;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,IAAI,EAAC,QAA7B;AAAA,wBACKrB,SAAS,GAAG,YAAH,GAAkB;AADhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA9CJ,eAmDI,QAAC,SAAD;AAAA,sBACKF,MAAM,CAAC8B,GAAP,CAAYR,GAAD,iBACR,QAAC,KAAD;AAAA,wBAAkBA;AAAlB,eAAYA,GAAZ;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA0DI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAErC,IAAZ;AAAkB,UAAA,EAAE,EAAG,cAAaqB,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DJ;AAAA,sBADA,GA+DE,IAjEV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwEH;;GAxHQT,M;UAOYV,W,EACSD,S;;;KARrBW,M;AA0HT,MAAMkC,OAAO,GAAG3C,MAAM,CAAC4C,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,O;AAQN,MAAME,YAAY,GAAG7C,MAAM,CAAC8C,GAAI;AAChC;AACA,CAFA;MAAMD,Y;AAIN,eAAepC,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from 'react-router-dom';\n\nimport {useNavigate} from \"react-router\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Button, Error, FormField, Input, Label, Textarea} from \"../../styles\";\nimport Show from \"./Show\";\n\nfunction Update() {\n    // const [exercise_id, setExerciseId] = useState(null)\n    // const [repetitionCount, setRepetitionCount] = useState(null)\n    // const [repetitionType, setRepetitionType] = useState(null)\n    const [log, setLog] = useState(null)\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n    const {exercise_id, id} = useParams()\n\n    useEffect(() => {\n        fetch(`/logs/${id}`)\n            .then((r) => r.json())\n            .then((r) => {\n                setLog(r)\n            });\n    }, [])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(`/logs/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                exercise_id: exercise_id,\n                repetition_type: log.repetition_type,\n                repetition_count: log.repetition_count,\n            }),\n        }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n                navigate(`/exercises/${exercise_id}`);\n                <Show id={id}/>\n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        });\n    }\n\n    const onChange = (field) => (event) => {\n\n        setLog({[field]: event.target.value})\n        return event\n    }\n\n    return (\n        <Wrapper>\n            <WrapperChild>\n                <h2>Update Log</h2>\n                {log ?\n                    <>\n                        <form onSubmit={handleSubmit}>\n                            <FormField>\n                                <Label htmlFor=\"exercise_id\">Exercise ID</Label>\n                                <Input\n                                    type=\"number\"\n                                    id=\"exercise_id\"\n                                    value={log.exercise_id}\n                                    onChange={onChange(\"exercise_id\")}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"exercise_title\">Exercise title</Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"exerciseTitle\"\n                                    value={log.title}\n                                    disabled={true}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"exercise_description\">Exercise description</Label>\n                                <Textarea\n                                    id=\"description\"\n                                    rows=\"5\"\n                                    value={log.description}\n                                    disabled={true}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"repetitionCount\">Repetition count</Label>\n                                <Input\n                                    type=\"number\"\n                                    id=\"repetitionCount\"\n                                    value={log.repetition_count}\n                                    onChange={onChange(\"repetition_count\")}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"repetitionType\">Repetition type</Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"repetitionType\"\n                                    value={log.repetition_type}\n                                    onChange={onChange(\"repetition_type\")}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Button color=\"primary\" type=\"submit\">\n                                    {isLoading ? \"Loading...\" : \"Update Log\"}\n                                </Button>\n                            </FormField>\n                            <FormField>\n                                {errors.map((err) => (\n                                    <Error key={err}>{err}</Error>\n                                ))}\n                            </FormField>\n                        </form>\n                        <Button as={Link} to={`/exercises/${id}`}>\n                            Cancel\n                        </Button>\n                    </>\n                    : null\n                }\n            </WrapperChild>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default Update;"]},"metadata":{},"sourceType":"module"}