{"ast":null,"code":"var _jsxFileName = \"/home/leissan/Development/hiking/client/src/components/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm({\n  onLogin\n}) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        image_url: imageUrl,\n        name: name,\n        last_name: lastName,\n        bio\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"name\",\n        autoComplete: \"off\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"lastName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"lastName\",\n        autoComplete: \"off\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password_confirmation\",\n        value: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"imageUrl\",\n        children: \"Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"imageUrl\",\n        value: imageUrl,\n        onChange: e => setImageUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"bio\",\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        rows: \"3\",\n        id: \"bio\",\n        value: bio,\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: isLoading ? \"Loading...\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpForm, \"U25+1265tkYoP0/ffyKLRHX9bzc=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/home/leissan/Development/hiking/client/src/components/SignUpForm.js"],"names":["React","useState","Button","Error","Input","FormField","Label","Textarea","SignUpForm","onLogin","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","name","setName","lastName","setLastName","bio","setBio","errors","setErrors","isLoading","setIsLoading","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","password_confirmation","image_url","last_name","then","r","ok","json","user","err","target","value","map"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Error, Input, FormField, Label, Textarea} from \"../styles\";\n\nfunction SignUpForm({onLogin}) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors([]);\n        setIsLoading(true);\n        fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username,\n                password,\n                password_confirmation: passwordConfirmation,\n                image_url: imageUrl,\n                name: name,\n                last_name: lastName,\n                bio,\n            }),\n        }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n                r.json().then((user) => onLogin(user));\n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        });\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormField>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                    type=\"text\"\n                    id=\"username\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"name\">Name</Label>\n                <Input\n                    type=\"text\"\n                    id=\"name\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"lastName\">Name</Label>\n                <Input\n                    type=\"text\"\n                    id=\"lastName\"\n                    autoComplete=\"off\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    autoComplete=\"current-password\"\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"password\">Password Confirmation</Label>\n                <Input\n                    type=\"password\"\n                    id=\"password_confirmation\"\n                    value={passwordConfirmation}\n                    onChange={(e) => setPasswordConfirmation(e.target.value)}\n                    autoComplete=\"current-password\"\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"imageUrl\">Profile Image</Label>\n                <Input\n                    type=\"text\"\n                    id=\"imageUrl\"\n                    value={imageUrl}\n                    onChange={(e) => setImageUrl(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"bio\">Bio</Label>\n                <Textarea\n                    rows=\"3\"\n                    id=\"bio\"\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n            </FormField>\n            <FormField>\n                {errors.map((err) => (\n                    <Error key={err}>{err}</Error>\n                ))}\n            </FormField>\n        </form>\n    );\n}\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}