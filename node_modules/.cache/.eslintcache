[{"/home/leissan/Development/hiking/client/src/index.js":"1","/home/leissan/Development/hiking/client/src/App.js":"2","/home/leissan/Development/hiking/client/src/reportWebVitals.js":"3","/home/leissan/Development/hiking/client/src/components/App.js":"4","/home/leissan/Development/hiking/client/src/components/NavBar.js":"5","/home/leissan/Development/hiking/client/src/pages/Login.js":"6","/home/leissan/Development/hiking/client/src/pages/hikes/HikeList.js":"7","/home/leissan/Development/hiking/client/src/pages/exercise/Update.js":"8","/home/leissan/Development/hiking/client/src/pages/exercise/List.js":"9","/home/leissan/Development/hiking/client/src/pages/NewExercise.js":"10","/home/leissan/Development/hiking/client/src/pages/exercise/Show.js":"11","/home/leissan/Development/hiking/client/src/components/LoginForm.js":"12","/home/leissan/Development/hiking/client/src/components/SignUpForm.js":"13","/home/leissan/Development/hiking/client/src/pages/exercise/Logs.js":"14","/home/leissan/Development/hiking/client/src/styles/index.js":"15","/home/leissan/Development/hiking/client/src/styles/Button.js":"16","/home/leissan/Development/hiking/client/src/styles/Input.js":"17","/home/leissan/Development/hiking/client/src/styles/Textarea.js":"18","/home/leissan/Development/hiking/client/src/styles/Label.js":"19","/home/leissan/Development/hiking/client/src/styles/Box.js":"20","/home/leissan/Development/hiking/client/src/styles/Error.js":"21","/home/leissan/Development/hiking/client/src/styles/FormField.js":"22"},{"size":644,"mtime":1684800026255,"results":"23","hashOfConfig":"24"},{"size":500,"mtime":1684795262255,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1684794801285,"results":"26","hashOfConfig":"24"},{"size":2124,"mtime":1684800578515,"results":"27","hashOfConfig":"24"},{"size":1075,"mtime":1684804756265,"results":"28","hashOfConfig":"24"},{"size":1306,"mtime":1684800400485,"results":"29","hashOfConfig":"24"},{"size":1900,"mtime":1684800350565,"results":"30","hashOfConfig":"24"},{"size":5341,"mtime":1684800334925,"results":"31","hashOfConfig":"24"},{"size":1329,"mtime":1684800270155,"results":"32","hashOfConfig":"24"},{"size":3215,"mtime":1684800413245,"results":"33","hashOfConfig":"24"},{"size":4820,"mtime":1684800331075,"results":"34","hashOfConfig":"24"},{"size":1723,"mtime":1684800582995,"results":"35","hashOfConfig":"24"},{"size":4270,"mtime":1684800590325,"results":"36","hashOfConfig":"24"},{"size":1655,"mtime":1684800319775,"results":"37","hashOfConfig":"24"},{"size":282,"mtime":1684800134645,"results":"38","hashOfConfig":"24"},{"size":999,"mtime":1684800123625,"results":"39","hashOfConfig":"24"},{"size":292,"mtime":1684800137955,"results":"40","hashOfConfig":"24"},{"size":317,"mtime":1684800147615,"results":"41","hashOfConfig":"24"},{"size":192,"mtime":1684800141355,"results":"42","hashOfConfig":"24"},{"size":218,"mtime":1684800112095,"results":"43","hashOfConfig":"24"},{"size":602,"mtime":1684800127035,"results":"44","hashOfConfig":"24"},{"size":153,"mtime":1684800131075,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1m0qags",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/leissan/Development/hiking/client/src/index.js",[],["97","98"],"/home/leissan/Development/hiking/client/src/App.js",[],"/home/leissan/Development/hiking/client/src/reportWebVitals.js",[],"/home/leissan/Development/hiking/client/src/components/App.js",["99","100","101","102","103","104","105","106","107","108","109"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport HikeList from \"../pages/hikes/HikeList\";\nimport NewExercise from \"../pages/NewExercise\";\nimport List from \"../pages/exercise/List\";\nimport Update from \"../pages/exercise/Update\";\nimport Show from \"../pages/exercise/Show\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [myHikes, setMyHikes] = useState([]);\n  const [otherHikes, setOtherHikes] = useState([]);\n  const [participantHikes, setParticipantHikes] = useState([]);\n\n  useEffect(() => {\n      // auto-login\n      fetch(\"/me\").then((r) => {\n          if (r.ok) {\n              r.json().then(\n                  (u) => {\n                      setUser(u);\n                  }\n              );\n          }\n      });\n\n      // fetchMyHikes();\n      // fetchOtherHikes();\n      // fetchParticipantHikes();\n  }, []);\n\n  useEffect(() => {\n      // auto-login\n      if(user) {\n          setMyHikes(user.owned_hikes);\n          setParticipantHikes(user.participated_hikes);\n      }\n\n      // fetchMyHikes();\n      // fetchOtherHikes();\n      // fetchParticipantHikes();\n  }, [user]);\n\n  if (!user) return <Login onLogin={setUser}/>;\n\n  return (\n      <>\n          <NavBar user={user} setUser={setUser}/>\n          <HikeList user={user}/>\n          {/*<main>*/}\n          {/*  <Switch>*/}\n          {/*    <Route path=\"/new_exercise\">*/}\n          {/*      <NewExercise user={user} />*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/exercises/:exercise_id/update_log/:id\">*/}\n          {/*      <Update/>*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/exercises/:id\">*/}\n          {/*      <Show/>*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/exercises\">*/}\n          {/*      <List />*/}\n          {/*    </Route>*/}\n          {/*    <Route path=\"/\">*/}\n          {/*      <List user={user} />*/}\n          {/*    </Route>*/}\n          {/*  </Switch>*/}\n          {/*</main>*/}\n      </>\n  );\n}\n\nexport default App;\n\n","/home/leissan/Development/hiking/client/src/components/NavBar.js",[],"/home/leissan/Development/hiking/client/src/pages/Login.js",[],"/home/leissan/Development/hiking/client/src/pages/hikes/HikeList.js",["110","111","112"],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nconst HikeList = (user) => {\n    const [myHikes, setMyHikes] = useState([]);\n    const [otherHikes, setOtherHikes] = useState([]);\n    const [participantHikes, setParticipantHikes] = useState([]);\n\n    useEffect(() => {\n        fetchMyHikes(user.user.owned_hikes);\n        // fetchOtherHikes();\n        fetchParticipantHikes(user.participant_hikes);\n    }, []);\n\n    const fetchMyHikes = (myHikesData) => {\n        // console.log(\"!!\", user.owned_hikes)\n        setMyHikes(myHikesData);\n    };\n\n    const fetchParticipantHikes = (participantHikesData) => {\n        setParticipantHikes(participantHikesData);\n    };\n\n    return (<Container>\n            <Column>\n                <h2>My Hikes</h2>\n                <ul>\n                    {myHikes ? <>\n                        {myHikes.map((hike) => (<li key={hike.id}>{hike.title}</li>))}\n                    </> : null}\n                </ul>\n            </Column>\n            <Column>\n                <h2>Other Hikes</h2>\n                <ul>\n                    {/*{otherHikes.map((hike) => (*/}\n                    {/*    <li key={hike.id}>{hike.name}</li>*/}\n                    {/*))}*/}\n                </ul>\n            </Column>\n            <Column>\n                <h2>Participant Hikes</h2>\n                <ul>\n                    {participantHikes ? <>\n                        {participantHikes.map((hike) => (<li key={hike.id}>{hike.name}</li>))}\n                    </> : null}\n\n                </ul>\n            </Column>\n        </Container>);\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Column = styled.div`\n  flex-basis: 30%;\n  padding: 20px;\n  background-color: #f2f2f2;\n\n  h2 {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n`;\n\nexport default HikeList;","/home/leissan/Development/hiking/client/src/pages/exercise/Update.js",["113","114"],"import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from 'react-router-dom';\n\nimport {useNavigate} from \"react-router\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Button, Error, FormField, Input, Label, Textarea} from \"../../styles\";\nimport Show from \"./Show\";\n\nfunction Update() {\n    // const [exercise_id, setExerciseId] = useState(null)\n    // const [repetitionCount, setRepetitionCount] = useState(null)\n    // const [repetitionType, setRepetitionType] = useState(null)\n    const [log, setLog] = useState(null)\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n    const {exercise_id, id} = useParams()\n\n    useEffect(() => {\n        fetch(`/logs/${id}`)\n            .then((r) => r.json())\n            .then((r) => {\n                setLog(r)\n            });\n    }, [])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(`/logs/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                exercise_id: exercise_id,\n                repetition_type: log.repetition_type,\n                repetition_count: log.repetition_count,\n            }),\n        }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n                navigate(`/exercises/${exercise_id}`);\n                <Show id={id}/>\n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        });\n    }\n\n    const onChange = (field) => (event) => {\n\n        setLog({[field]: event.target.value})\n        return event\n    }\n\n    return (\n        <Wrapper>\n            <WrapperChild>\n                <h2>Update Log</h2>\n                {log ?\n                    <>\n                        <form onSubmit={handleSubmit}>\n                            <FormField>\n                                <Label htmlFor=\"exercise_id\">Exercise ID</Label>\n                                <Input\n                                    type=\"number\"\n                                    id=\"exercise_id\"\n                                    value={log.exercise_id}\n                                    onChange={onChange(\"exercise_id\")}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"exercise_title\">Exercise title</Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"exerciseTitle\"\n                                    value={log.title}\n                                    disabled={true}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"exercise_description\">Exercise description</Label>\n                                <Textarea\n                                    id=\"description\"\n                                    rows=\"5\"\n                                    value={log.description}\n                                    disabled={true}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"repetitionCount\">Repetition count</Label>\n                                <Input\n                                    type=\"number\"\n                                    id=\"repetitionCount\"\n                                    value={log.repetition_count}\n                                    onChange={onChange(\"repetition_count\")}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Label htmlFor=\"repetitionType\">Repetition type</Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"repetitionType\"\n                                    value={log.repetition_type}\n                                    onChange={onChange(\"repetition_type\")}\n                                />\n                            </FormField>\n                            <FormField>\n                                <Button color=\"primary\" type=\"submit\">\n                                    {isLoading ? \"Loading...\" : \"Update Log\"}\n                                </Button>\n                            </FormField>\n                            <FormField>\n                                {errors.map((err) => (\n                                    <Error key={err}>{err}</Error>\n                                ))}\n                            </FormField>\n                        </form>\n                        <Button as={Link} to={`/exercises/${id}`}>\n                            Cancel\n                        </Button>\n                    </>\n                    : null\n                }\n            </WrapperChild>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default Update;","/home/leissan/Development/hiking/client/src/pages/exercise/List.js",[],"/home/leissan/Development/hiking/client/src/pages/NewExercise.js",["115"],"import { useState } from \"react\";\nimport {  useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\n\nfunction NewExercise({ user, setUser }) {\n    const [title, setTitle] = useState(\"My Awesome Exercise\");\n    const [description, setDescription] = useState(`Here's how you make it.`);\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"/exercises\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                title: title,\n                description: description,\n            }),\n        }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n                r.json().then ((newexercise) => {\n                const exercises = user.all_exercises\n               setTitle(\"\")\n               setDescription(\"\")\n               setUser({...user, all_exercises: [...exercises, newexercise]})\n                 } )\n              \n               \n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        });\n    }\n\n    return (\n        <Wrapper>\n            <WrapperChild>\n                <h2>Create Exercise</h2>\n                <form onSubmit={handleSubmit}>\n                    <FormField>\n                        <Label htmlFor=\"title\">Title</Label>\n                        <Input\n                            type=\"text\"\n                            id=\"title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                        />\n                    </FormField>\n                    <FormField>\n                        <Label htmlFor=\"description\">Description</Label>\n                        <Textarea\n                            id=\"description\"\n                            rows=\"10\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </FormField>\n                    <FormField>\n                        <Button color=\"primary\" type=\"submit\">\n                            {isLoading ? \"Loading...\" : \"Submit Exercise\"}\n                        </Button>\n                    </FormField>\n                    <FormField>\n                        {errors.map((err) => (\n                            <Error key={err}>{err}</Error>\n                        ))}\n                    </FormField>\n                </form>\n            </WrapperChild>\n            <WrapperChild>\n                <h1>{title}</h1>\n                <ReactMarkdown>{description}</ReactMarkdown>\n            </WrapperChild>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NewExercise;","/home/leissan/Development/hiking/client/src/pages/exercise/Show.js",["116","117","118"],"import React, {useEffect, useState} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {Box, Button, Error, FormField, Input, Label} from \"../../styles\";\nimport Logs from \"./Logs\";\n\nfunction Show() {\n    const [exercise, setExercise] = useState(null);\n    const [isNew, setNew] = useState(false);\n    const [repetitionCount, setRepetitionCount] = useState(null)\n    const [repetitionType, setRepetitionType] = useState(null)\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const navigate = useNavigate()\n    const {id} = useParams()\n\n    useEffect(() => {\n        fetch(`/exercises/${id}`)\n            .then((r) => r.json())\n            .then(setExercise);\n    }, [isNew]);\n\n\n    console.log(\"exercise\", exercise)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"/logs\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                exercise_id: id,\n                repetition_type: repetitionType,\n                repetition_count: repetitionCount,\n            }),\n        }).then((r) => {\n            setIsLoading(false);\n            if (r.ok) {\n                navigate(`/exercises/${id}`);\n                setNew(!isNew)\n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        });\n    }\n\n    const addNew = () => {\n        return setNew(!isNew)\n    }\n\n    return (\n        isNew ?\n            <Wrapper>\n                <WrapperChild>\n                    <h2>Create Log</h2>\n                    <form onSubmit={handleSubmit}>\n                        <FormField>\n                            <Label htmlFor=\"exerciseID\">Exercise ID</Label>\n                            <Input\n                                type=\"number\"\n                                id=\"exerciseID\"\n                                value={id}\n                                disabled={true}\n                            />\n                        </FormField>\n                        <FormField>\n                            <Label htmlFor=\"repetitionCount\">Repetition count</Label>\n                            <Input\n                                type=\"number\"\n                                id=\"repetitionCount\"\n                                value={repetitionCount}\n                                onChange={(e) => setRepetitionCount(e.target.value)}\n                            />\n                        </FormField>\n                        <FormField>\n                            <Label htmlFor=\"repetitionType\">Repetition type</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"repetitionType\"\n                                value={repetitionType}\n                                onChange={(e) => setRepetitionType(e.target.value)}\n                            />\n                        </FormField>\n                        <FormField>\n                            <Button color=\"primary\" type=\"submit\">\n                                {isLoading ? \"Loading...\" : \"Submit Log\"}\n                            </Button>\n                        </FormField>\n                        <FormField>\n                            {errors.map((err) => (\n                                <Error key={err}>{err}</Error>\n                            ))}\n                        </FormField>\n                    </form>\n                    <div style={{marginBottom: 24}}>\n                        <Button onClick={addNew}>\n                            Cancel\n                        </Button>\n                    </div>\n                </WrapperChild>\n            </Wrapper>\n            :\n\n            exercise ?\n                <>\n                    <Wrapper>\n                        {\n                            <>\n                                <div style={{marginBottom: 24}}>\n                                    <Button onClick={addNew}>\n                                        Add new log\n                                    </Button>\n                                </div>\n\n                                <h2>{exercise.title}</h2>\n                                <ReactMarkdown>{exercise.description}</ReactMarkdown>\n                                <Logs userLogs={exercise.logs}></Logs>\n                            </>\n                        }\n                    </Wrapper>\n                </>\n                :\n                <></>\n    )\n}\n\nconst Wrapper = styled.section`\n  max-width: 800px;\n  margin: 40px auto;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default Show;","/home/leissan/Development/hiking/client/src/components/LoginForm.js",[],"/home/leissan/Development/hiking/client/src/components/SignUpForm.js",[],"/home/leissan/Development/hiking/client/src/pages/exercise/Logs.js",["119","120","121","122","123"],"import React, {useEffect, useState} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {Box, Button} from \"../../styles\";\n\nfunction Logs({userLogs}) {\n    const [logs, setLogs] = useState(userLogs);\n    const navigate = useNavigate()\n\n    const deleteLog = (id, exercise_id) => {\n        fetch(`/logs/${id}`, {method: \"DELETE\"})\n            .then((r) => r.json())\n            .then(setLogs);\n\n        navigate(`/exercises/${exercise_id}`);\n    }\n\n    console.log(\"logs\", logs)\n    console.log(\"logs\", userLogs)\n    return (\n        logs.map((log) => (\n                <Box>\n                    <p>\n                        Repetion count: {log.repetition_count}\n                    </p>\n                    <p>\n                        Repetion type: {log.repetition_type}\n                    </p>\n                    <p>\n                        Repetion count: {log.repetition_type}\n                    </p>\n                    <p>\n                        Was made at: {log.log_date}\n                    </p>\n                    <Button as={Link} onClick={() => deleteLog(log.id, log.exercise_id)}>\n                        Delete log\n                    </Button>\n                    <Button as={Link} to={`/exercises/${log.exercise_id}/update_log/${log.id}`}>\n                        Update log\n                    </Button>\n                </Box>\n            )\n        )\n    )\n}\n\nconst Wrapper = styled.section`\n  max-width: 800px;\n  margin: 40px auto;\n`;\n\nconst Exercise = styled.article`\n  margin-bottom: 24px;\n`;\n\nexport default Logs;","/home/leissan/Development/hiking/client/src/styles/index.js",[],"/home/leissan/Development/hiking/client/src/styles/Button.js",[],"/home/leissan/Development/hiking/client/src/styles/Input.js",[],"/home/leissan/Development/hiking/client/src/styles/Textarea.js",[],"/home/leissan/Development/hiking/client/src/styles/Label.js",[],"/home/leissan/Development/hiking/client/src/styles/Box.js",[],"/home/leissan/Development/hiking/client/src/styles/Error.js",[],"/home/leissan/Development/hiking/client/src/styles/FormField.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":31},{"ruleId":"128","severity":1,"message":"133","line":2,"column":33,"nodeType":"130","messageId":"131","endLine":2,"endColumn":38},{"ruleId":"128","severity":1,"message":"134","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":19},{"ruleId":"128","severity":1,"message":"135","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":12},{"ruleId":"128","severity":1,"message":"136","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":14},{"ruleId":"128","severity":1,"message":"137","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":12},{"ruleId":"128","severity":1,"message":"138","line":13,"column":10,"nodeType":"130","messageId":"131","endLine":13,"endColumn":17},{"ruleId":"128","severity":1,"message":"139","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":20},{"ruleId":"128","severity":1,"message":"140","line":14,"column":22,"nodeType":"130","messageId":"131","endLine":14,"endColumn":35},{"ruleId":"128","severity":1,"message":"141","line":15,"column":10,"nodeType":"130","messageId":"131","endLine":15,"endColumn":26},{"ruleId":"128","severity":1,"message":"139","line":6,"column":12,"nodeType":"130","messageId":"131","endLine":6,"endColumn":22},{"ruleId":"128","severity":1,"message":"140","line":6,"column":24,"nodeType":"130","messageId":"131","endLine":6,"endColumn":37},{"ruleId":"142","severity":1,"message":"143","line":13,"column":8,"nodeType":"144","endLine":13,"endColumn":10,"suggestions":"145"},{"ruleId":"128","severity":1,"message":"146","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":26,"column":8,"nodeType":"144","endLine":26,"endColumn":10,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"149","line":12,"column":11,"nodeType":"130","messageId":"131","endLine":12,"endColumn":19},{"ruleId":"128","severity":1,"message":"150","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":13},{"ruleId":"128","severity":1,"message":"151","line":5,"column":9,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"142","severity":1,"message":"147","line":23,"column":8,"nodeType":"144","endLine":23,"endColumn":15,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"153","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"146","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},{"ruleId":"128","severity":1,"message":"154","line":3,"column":28,"nodeType":"130","messageId":"131","endLine":3,"endColumn":37},{"ruleId":"128","severity":1,"message":"155","line":48,"column":7,"nodeType":"130","messageId":"131","endLine":48,"endColumn":14},{"ruleId":"128","severity":1,"message":"156","line":53,"column":7,"nodeType":"130","messageId":"131","endLine":53,"endColumn":15},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'NewExercise' is defined but never used.","'List' is defined but never used.","'Update' is defined but never used.","'Show' is defined but never used.","'myHikes' is assigned a value but never used.","'otherHikes' is assigned a value but never used.","'setOtherHikes' is assigned a value but never used.","'participantHikes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user.participant_hikes' and 'user.user.owned_hikes'. Either include them or remove the dependency array.","ArrayExpression",["159"],"'ReactMarkdown' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["160"],"'navigate' is assigned a value but never used.","'Link' is defined but never used.","'Box' is defined but never used.",["161"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","'Wrapper' is assigned a value but never used.","'Exercise' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [user.participant_hikes, user.user.owned_hikes]",{"range":"168","text":"169"},"Update the dependencies array to be: [id]",{"range":"170","text":"171"},"Update the dependencies array to be: [id, isNew]",{"range":"172","text":"173"},[448,450],"[user.participant_hikes, user.user.owned_hikes]",[930,932],"[id]",[839,846],"[id, isNew]"]